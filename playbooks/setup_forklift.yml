---
- hosts: all
  become: true
  vars:
    vagrant_libvirt: true
  roles:
    - role: libvirt
    - role: vagrant
    - role: epel_repositories

- hosts: all
  vars:
    forklift_url: "https://github.com/theforeman/forklift"
    forklift_dest: "{{ ansible_env.HOME }}/forklift"
    forklift_version: master
    forklift_install_from_galaxy: True
    forklift_install_pulp_from_galaxy: False
    forklift_config:
      sync_type: disabled
      libvirt_options:
        volume_cache: unsafe
        graphics_type: none
        qemu_args:
          - :value: '-device'
          - :value: 'cirrus-vga,id=video0'
      boxes:
        exclude:
          - '^[^p]'
      domain: example.com
  tasks:
    - name: 'Install Forklift dependencies'
      become: true
      package:
        name:
          - ansible
          - git-core
          - rubygem-deep_merge
        state: 'present'

    - name: 'Install pip3.11 for telemetry'
      become: true
      package:
        name:
          - python3.11-pip
        state: 'present'
      when:
        - forklift_telemetry|default(false)
        - ansible_distribution_major_version != '7'

    - name: 'install telemetry dependencies'
      become: true
      pip:
        name:
          - protobuf<3.21
          - opentelemetry-api
          - opentelemetry-sdk
          - opentelemetry-exporter-otlp
        executable: pip3.11
      when:
        - forklift_telemetry|default(false)
        - ansible_distribution_major_version != '7'

    - name: 'Clone Forklift'
      git:
        repo: "{{ forklift_url }}"
        version: "{{ forklift_version }}"
        dest: "{{ forklift_dest }}"

    - name: 'Configure Forklift'
      copy:
        content: "{{ forklift_config | to_nice_yaml }}"
        dest: "{{ forklift_dest }}/vagrant/settings.yaml"

    - name: 'Install Forklift collection dependencies'
      command:
        cmd: ansible-galaxy collection install -r requirements.yml
        chdir: "{{ forklift_dest }}"
      register: collection_install
      until: collection_install is not failed
      retries: 3
      when: forklift_install_from_galaxy

    - name: 'Install Forklift Pulp collection dependencies for 3.28'
      command:
        cmd: ansible-galaxy collection install -r requirements-pulp.yml
        chdir: "{{ forklift_dest }}"
      when:
        - forklift_install_pulp_from_galaxy
        - pipeline_version is defined
        - pipeline_version != 'nightly'
        - pipeline_version is version('3.28', '==')
      retries: 3
      register: result
      until: result is succeeded

    - name: 'Install Forklift Pulp collection dependencies for 3.39'
      command:
        cmd: ansible-galaxy collection install -r requirements-pulp-339.yml
        chdir: "{{ forklift_dest }}"
      when:
        - forklift_install_pulp_from_galaxy
        - pipeline_version is defined
        - pipeline_version != 'nightly'
        - pipeline_version is version('3.39', '==')
      retries: 3
      register: result
      until: result is succeeded

    - name: 'Install Forklift pulp_installer role dependencies'
      command:
        cmd: ansible-galaxy role install -r playbooks/galaxy_collections/ansible_collections/pulp/pulp_installer/requirements.yml
        chdir: "{{ forklift_dest }}"
      when: forklift_install_pulp_from_galaxy
      retries: 3
      register: result
      until: result is succeeded
