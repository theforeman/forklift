---
- name: install proxy
  hosts:
    - "{{ forklift_proxy_name }}"
  become: yes
  vars_files:
    - ../vars/install_base.yml
    - ../vars/repos_staging.yml
  vars:
    foreman_proxy_content_server: "{{ forklift_server_name }}"
    foreman_installer_options_internal_use_only:
      - "--certs-tar-file {{ foreman_proxy_content_certs_tar }}"
      - "--foreman-proxy-trusted-hosts {{ server_fqdn }}"
      - "--foreman-proxy-trusted-hosts {{ ansible_nodename }}"
      - "--foreman-proxy-foreman-base-url https://{{ server_fqdn }}"
      - "--foreman-proxy-oauth-consumer-key {{ oauth_consumer_key }}"
      - "--foreman-proxy-oauth-consumer-secret {{ oauth_consumer_secret }}"
      - "{{ '' if (pipeline_version == 'nightly' or pipeline_version is version('3.18', '>')) else ('--foreman-proxy-content-parent-fqdn %s' % server_fqdn) }}"
      - "--puppet-server-foreman-url https://{{ server_fqdn }}"
      - "--puppet-server-max-active-instances 1"
      - "--puppet-server-jvm-min-heap-size 1G"
      - "--puppet-server-jvm-max-heap-size 1G"
  roles:
    - role: forklift_versions
      scenario: "{{ pipeline_type }}"
      scenario_os: "{{ pipeline_os }}"
      scenario_version: "{{ pipeline_version }}"
    - foreman_proxy_content
    - foreman_installer
  post_tasks:
    - name: install hammer
      package:
        name: "{{ 'tfm-' if ansible_distribution_major_version == '7' else '' }}rubygem-hammer_cli_katello"

    - name: deploy hammer config
      copy:
        dest: /etc/hammer/cli.modules.d/foreman.yml
        content: |
          :foreman:
            # Enable/disable foreman commands
            :enable_module: true

            :username: 'admin'
            :password: 'changeme'

            # Your foreman server address
            :host: 'https://{{ server_fqdn }}'

            # Enable using sessions
            # When sessions are enabled, hammer ignores credentials stored in the config file
            # and asks for them interactively at the begining of each session.
            :use_sessions: false

            # Check API documentation cache status on each request
            :refresh_cache: false

            # API request timeout in seconds, set -1 for infinity
            :request_timeout: 120

          :ssl:
            :ssl_ca_file: '/etc/pki/katello/certs/katello-server-ca.crt'
