---
# Product
- name: 'Find product'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} product info
    --name "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  register: katello_provisioning_product
  ignore_errors: True

- name: 'Create centos product'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} product create
    --name "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_product.stderr.find('not found') != -1

# CentOS
- name: 'Find centos repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository info
    --name "CentOS 7"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  register: katello_provisioning_repo
  ignore_errors: True

- name: 'Create centos repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository create
    --product="CentOS"
    --content-type="yum"
    --name "CentOS 7"
    --url http://mirror.centos.org/centos/7/os/x86_64
    --download-policy {{ katello_provisioning_download_policy }}
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_repo.stderr.find('not found') != -1

- name: 'Sync the centos repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository synchronize
    --name "CentOS 7"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_sync_repos

# Foreman Client
- name: 'Find client repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository info
    --name "Foreman Client"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  register: foreman_client_repo
  ignore_errors: True

- name: 'Create client repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository create
    --product="CentOS"
    --content-type="yum"
    --name "Foreman Client"
    --url https://yum.theforeman.org/client/{{ foreman_repositories_version }}/el7/x86_64
    --download-policy {{ katello_provisioning_download_policy }}
    --organization "{{ katello_provisioning_organization }}"
  when: foreman_client_repo.stderr.find('not found') != -1

- name: 'Sync the client repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository synchronize
    --name "Foreman Client"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_sync_repos

# Puppet 5
- name: 'Find puppet5 repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository info
    --name "Puppet 5"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  register: katello_puppet_repo
  ignore_errors: True

- name: 'Create puppet5 repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository create
    --product="CentOS"
    --content-type="yum"
    --name "Puppet 5"
    --url https://yum.puppetlabs.com/puppet5/el/7/x86_64/
    --download-policy {{ katello_provisioning_download_policy }}
    --organization "{{ katello_provisioning_organization }}"
  when: katello_puppet_repo.stderr.find('not found') != -1

- name: 'Sync the puppet5 repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository synchronize
    --name "Puppet 5"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_sync_repos

# EPEL
- name: 'Find epel repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository info
    --name "EPEL 7"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  register: katello_epel_repo
  ignore_errors: True

- name: 'Create epel repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository create
    --product="CentOS"
    --content-type="yum"
    --name "EPEL 7"
    --url "https://dl.fedoraproject.org/pub/epel/7/x86_64"
    --download-policy {{ katello_provisioning_download_policy }}
    --organization "{{ katello_provisioning_organization }}"
  when: katello_epel_repo.stderr.find('not found') != -1

- name: 'Sync the epel repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository synchronize
    --name "EPEL 7"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_sync_repos

- name: 'Find foreman plugins repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository info
    --name "Foreman Plugins"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  register: katello_foreman_plugins_repo
  ignore_errors: True

- name: 'Create foreman plugins repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository create
    --product="CentOS"
    --content-type="yum"
    --name "Foreman Plugins"
    --url "http://yum.theforeman.org/plugins/{{ foreman_repositories_version }}/el7/x86_64/"
    --download-policy {{ katello_provisioning_download_policy }}
    --organization "{{ katello_provisioning_organization }}"
  when: "'not found' in katello_foreman_plugins_repo.stderr"

- name: 'Sync foreman plugins repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} repository synchronize
    --name "Foreman Plugins"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_sync_repos

# Activation key
- name: 'Find activation key'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} activation-key info
    --name "CentOS 7"
    --organization "{{ katello_provisioning_organization }}"
  register: katello_provisioning_activation_key
  ignore_errors: True

- name: 'Create activation key'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} activation-key create
    --organization "{{ katello_provisioning_organization }}"
    --name="CentOS 7"
    --content-view="Default Organization View"
    --lifecycle-environment="Library"
    --unlimited-hosts
  when: katello_provisioning_activation_key.stderr.find('not found') != -1

- name: 'Get all the subscriptions'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} --output json subscription list
    --organization '{{ katello_provisioning_organization }}'
  register: subscriptions_json

- name: 'Add subscriptions to activation key'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} activation-key add-subscription
    --organization '{{ katello_provisioning_organization }}'
    --name 'CentOS 7'
    --subscription-id {{ item.Id }}
  with_items: "{{ subscriptions_json.stdout | from_json }}"

# Associate templates
- name: 'Find CentOS 7'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} --output json os info --title "CentOS 7"
  register: katello_provisioning_centos7_json
  ignore_errors: True

- name: 'Get CentOS 7 info'
  ansible.builtin.set_fact:
    katello_provisioning_centos7: "{{ katello_provisioning_centos7_json.stdout|from_json }}"
  when: katello_provisioning_centos7_json is success

- name: 'Create CentOS 7 os when not found'
  block:
    - name: 'Create CentOS_Linux 7'
      ansible.builtin.shell: >
        {{ katello_provisioning_hammer }} os create
        --name CentOS_Linux --major 7 --architectures x86_64 --family 'Redhat'

    - name: 'Find newly created CentOS_Linux 7'
      ansible.builtin.shell: >
        {{ katello_provisioning_hammer }} --output json os info --name "CentOS_Linux 7" ||
        {{ katello_provisioning_hammer }} --output json os info --title "CentOS_Linux 7"
      register: katello_provisioning_centos7_json_new

    - name: 'Get new CentOS 7 info'
      ansible.builtin.set_fact:
        katello_provisioning_centos7: "{{ katello_provisioning_centos7_json_new.stdout|from_json }}"
  when: "'not found' in katello_provisioning_centos7_json.stderr"

- name: 'Update partition table for CentOS 7'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} os update --id {{ katello_provisioning_centos7.Id }} --partition-tables 'Kickstart default'
  register: katello_provisioning_centos7_json

- name: 'Find kickstart templates'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} --output=json template list
    --search 'name ~ "Kickstart default"'
  register: kickstart_templates_json

- name: 'Set kickstart templates'
  ansible.builtin.set_fact:
    kickstart_templates: "{{ kickstart_templates_json.stdout|from_json }}"

- name: 'Find katello kickstart templates'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} --output=json template list
    --search 'name ~ "Katello Kickstart default"'
  register: katello_kickstart_templates_json

- name: 'Set kickstart templates'
  ansible.builtin.set_fact:
    katello_kickstart_templates: "{{ katello_kickstart_templates_json.stdout|from_json }}"

- name: 'Associate kickstart templates to CentOS 7'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} template add-operatingsystem --id {{ item.Id }} --operatingsystem 'CentOS 7'
  with_items: "{{ kickstart_templates }}"

- name: 'Set default templates for CentOS 7'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} os set-default-template --id {{ katello_provisioning_centos7.Id }} --provisioning-template-id {{ item.Id }}
  with_items: "{{ kickstart_templates }}"

- name: 'Overwrite default templates with katello specific ones for CentOS 7'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} os set-default-template --id {{ katello_provisioning_centos7.Id }} --provisioning-template-id {{ item.Id }}
  with_items: "{{ katello_kickstart_templates }}"

# Host group
- name: 'Find centos kickstart repo'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} --output=json repository info
    --name "CentOS 7"
    --product "CentOS"
    --organization "{{ katello_provisioning_organization }}"
  register: katello_provisioning_repo

- name: 'Set find centos kickstart repo'
  ansible.builtin.set_fact:
    katello_provisioning_repo_json: "{{ katello_provisioning_repo.stdout|from_json }}"

- name: 'Find hostgroup Katello CentOS 7'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} hostgroup info --name 'Katello CentOS 7'
  register: katello_provisioning_hostgroup_katello_centos
  ignore_errors: True

- name: 'Create Katello CentOS 7 host group'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} hostgroup create
    --name "Katello CentOS 7"
    --content-view "Default Organization View"
    --lifecycle-environment Library
    --query-organization "{{ katello_provisioning_organization }}"
    --content-source-id {{ foreman_provisioning_smart_proxy.Id }}
    --kickstart-repository-id {{ katello_provisioning_repo_json.Id }}
    --operatingsystem "CentOS 7"
    --partition-table 'Kickstart default'
    --parent 'Base'
    {{ foreman_provisioning_hammer_taxonomy_params }}
  when: katello_provisioning_hostgroup_katello_centos.stderr.find('not found') != -1

- name: 'Add activation key to Katello CentOS 7 host group'
  ansible.builtin.shell: >
      {{ katello_provisioning_hammer }} hostgroup set-parameter
      --hostgroup "Katello CentOS 7"
      --name kt_activation_keys
      --value "CentOS 7"

- name: 'Set enable-puppet5 parameter'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} hostgroup set-parameter
    --hostgroup "Katello CentOS 7"
    --name enable-puppet5
    --value true

# Lifecycle environments
- name: 'Find lifecycle-environment Development'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} lifecycle-environment info
    --name Development
    --organization "{{ katello_provisioning_organization }}"
  register: katello_provisioning_lce_development
  ignore_errors: True

- name: 'Create lifecycle-environment Development'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} lifecycle-environment create
    --name Development --prior Library
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_lce_development.stderr.find('not found') != -1

- name: 'Find lifecycle-environment Production'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} lifecycle-environment info
    --name Development
    --organization "{{ katello_provisioning_organization }}"
  register: katello_provisioning_lce_production
  ignore_errors: True

- name: 'Create lifecycle-environment Production'
  ansible.builtin.shell: >
    {{ katello_provisioning_hammer }} lifecycle-environment create
    --name Production --prior Development
    --organization "{{ katello_provisioning_organization }}"
  when: katello_provisioning_lce_production.stderr.find('not found') != -1
