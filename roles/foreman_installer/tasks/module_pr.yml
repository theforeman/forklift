---
- name: Set namespace, module_name and ref facts
  ansible.builtin.set_fact:
    namespace: "{{ module.split('/')[0] }}"
    module_name: "{{ module.split('/')[1] | replace('puppet-', '') | replace('puppetlabs-', '') }}"
    ref: "{{ module.split('/')[2] }}"

- name: Find puppet module
  ansible.builtin.find:
    paths: /usr/share/foreman-installer/modules
    patterns: "{{ module_name }}"
    file_type: directory
  register: foreman_module

- name: Find puppet module
  ansible.builtin.find:
    paths: /usr/share/katello-installer-base/modules
    patterns: "{{ module_name }}"
    file_type: directory
  register: katello_module

- name: Define module_dir for foreman
  ansible.builtin.set_fact:
    module_dir: /usr/share/foreman-installer/modules
  when: foreman_module.matched > 0

- name: Define module_dir for katello
  ansible.builtin.set_fact:
    module_dir: /usr/share/katello-installer-base/modules
  when: katello_module.matched > 0

- name: Delete old module
  ansible.builtin.file:
    state: absent
    path: "{{ module_dir }}/{{ module_name }}"

- name: Clone puppet module
  ansible.builtin.git:
    repo: https://github.com/{{ namespace }}/puppet-{{ module_name }}.git
    dest: "{{ module_dir }}/{{ module_name }}"

- name: "Fetch git PR"
  ansible.builtin.shell: >
      git fetch origin pull/{{ ref }}/head:pr &&
      git {{ foreman_installer_module_prs_strategy }} pr
  args:
    chdir: "{{ module_dir }}/{{ module_name }}"
  when: pr is defined and pr

- name: "Install module branches into installer directory"
  ansible.builtin.shell: git checkout {{ ref }}
  args:
    chdir: "{{ module_dir }}/{{ module_name }}"
  when: branch is defined and branch
